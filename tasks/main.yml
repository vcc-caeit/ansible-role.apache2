---
- name: Ensure Packages
  ansible.builtin.apt:
    name: "{{ apache2_packages }}"
    cache_valid_time: 3600
    install_recommends: false

- name: Enumerate MPM
  ansible.builtin.set_fact:
    apache2_selected_mpm:
      - name: "mpm_{{ apache2_mpm }}"
        state: present

- name: Ensure Modules
  community.general.apache2_module:
    name: "{{ item.name }}"
    state: "{{ item.state | default('absent') if item.name.startswith('mpm_') else item.state | default('present') }}"
  loop: "{{ apache2_selected_mpm | union(apache2_modules) | union(apache2_mpms | selectattr('name', '!=', apache2_selected_mpm[0].name)) | unique }}"
  loop_control:
    label: "{{ item.name }}"
  notify: Restart Apache

- name: Enumerate Site Configuration
  set_fact:
    _apache2_directories: "{{ [item.value.documentroot | mandatory] | union(_apache2_directories | default([])) }}"
    _apache2_listen: "{{ [item.value.listen | default('*:80')] | union(_apache2_listen | default([])) }}"
    _apache2_ssl_listen: "{{ [item.value.ssl_listen | default('*:443')] | union(_apache2_ssl_listen | default([])) }}"
  loop: "{{ apache2_enabled_sites | dict2items }}"
  loop_control:
    label: "{{ item.key }}"

- name: Ensure Configuration
  ansible.builtin.template:
    src: "{{ item.lstrip('/') }}.j2"
    dest: "{{ item }}"
    owner: root
    group: root
    mode: 0644
  loop:
    - "/etc/apache2/mods-available/{{ apache2_selected_mpm[0].name }}.conf"
    - /etc/apache2/ports.conf
    - /etc/apache2/conf-available/security.conf
  notify: Restart Apache

- name: Ensure Site Directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop: "{{ _apache2_directories }}"

- name: Ensure Site Configuration
  ansible.builtin.template:
    src: "{{ item.value.template | default(apache2_vhost_template) }}"
    dest: "/etc/apache2/sites-available/{{ item.key }}.conf"
    owner: root
    group: root
    mode: 0644
  loop: "{{ apache2_enabled_sites | dict2items }}"
  loop_control:
    label: "/etc/apache2/sites-available/{{ item.key }}.conf"
  notify: Restart Apache

- name: Ensure Configuration State
  ansible.builtin.file:
    src: "{{ omit if item in apache2__disabled_sites else item | regex_replace('/etc/apache2', '..') }}"
    dest: "{{ item | regex_replace('/(\\w+)-available/', '/\\1-enabled/') }}"
    state: "{{ 'absent' if item in apache2__disabled_sites else 'link' }}"
  loop: "{{ ['/etc/apache2/conf-available/security.conf'] | union(apache2__enabled_sites) | union(apache2__disabled_sites) | unique }}"
  notify: Restart Apache
  vars:
    apache2__enabled_sites: "{{ apache2_enabled_sites | dict2items | map(attribute='key') |
      map('regex_replace', '^(.*)$', '/etc/apache2/sites-available/\\1.conf') | list }}"
    apache2__disabled_sites: "{{ apache2_disabled_sites | dict2items | map(attribute='key') |
      map('regex_replace', '^(.*)$', '/etc/apache2/sites-available/\\1.conf') | list }}"
